name: Build & publish Open Case Filing System
on: push

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  CARGO_TERM_COLOR: always
  SQLX_VERSION: 0.6.2
  SQLX_FEATURES: "rustls,postgres"
jobs:
  build-and-push-image:
    runs-on: ubuntu-latest    
    services:
        postgres:
          image: postgres:15
          env:
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
            POSTGRES_DB: docket-api
          ports:
            - 5432:5432
    strategy:
      fail-fast: false
      matrix:
        include:
          - dockerfile: ./web/Dockerfile
            image: ghcr.io/federal-courts-software-factory/open-case-filing-system/web
            app: clusters/apps/web/overlays/dev-cluster/deployment.yaml
          - dockerfile: ./docket-api/Dockerfile
            image: ghcr.io/federal-courts-software-factory/open-case-filing-system/docket-api
            app: clusters/apps/docket-api/overlays/dev-cluster/deployment.yaml
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - run: rustup toolchain install stable --profile minimal
      - name: Add Cargo Cache
      - uses: Swatinem/rust-cache@v2
        with:
          key: sqlx-${{ env.SQLX_VERSION }}
      - name: Install sqlx-cli
        run:
            cargo install sqlx-cli
            --version=${{ env.SQLX_VERSION }}
            --features ${{ env.SQLX_FEATURES }}
            --no-default-features
            --locked
      - name: Migrate database
        run: |
          sudo apt-get install libpq-dev -y && \
          cargo install sqlx-cli --version ${{ env.SQLX_VERSION }} && \ 
          sqlx database create && \
          sqlx migrate run
      - name: Generate code coverage
        run: cargo tarpaulin --verbose --workspace
        
      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN  }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          # list of Docker images to use as base name for tags
          images: ${{ matrix.image }}        
          # generate Docker tags based on the following events/attributes
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha   

            

      - name: Build and push Docker image Open Case Filing System
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Update Image Version in the related HelmChart values.yaml
        uses: fjogeleit/yaml-update-action@main
        with:
          valueFile: ${{ matrix.app }}
          propertyPath: 'spec.template.spec.containers[0].image'
          value:  ${{ steps.meta.outputs.tags.sha }}
          repository: federal-courts-software-factory/open-case-filing-system
          branch: deployment/${{ steps.image.outputs.version }}
          targetBranch: argocd
          createPR: true
          message: 'Update Image Version to ${{ steps.image.outputs.version }}'
          token: ${{ secrets.GITHUB_TOKEN }}
